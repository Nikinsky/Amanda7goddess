# docker-compose.yml
version: '3.8'

services:
  frontend:
    build:
      context: ./FrontEnd
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./FrontEnd:/app
      - /app/node_modules
      - /app/.next
    env_file:
      .env
    depends_on:
      - backend
    networks:
      - app-network



  backend:
    build:
      context: ./BackEnd
      dockerfile: Dockerfile
    volumes:
      - ./Backend:/app
      -
    env_file:
      - .env
    depends_on:
      - db
    command: >
      sh -c "sleep 5 &&
          python manage.py makemigrations &&
          python manage.py migrate &&
          python manage.py collectstatic --noinput &&
          echo \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='admin').exists() or User.objects.create_superuser('admin', 'admin@example.com', 'admin')\" | python manage.py shell &&
          gunicorn mysite.wsgi:application --bind 0.0.0.0:8000 --workers 3"

    ports:
      - "8000:8000"  # Проброс порта
    networks:
      - app-network


  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=Amandasite
      - POSTGRES_USER=amanda2025
      - POSTGRES_PASSWORD=amanda2025
    networks:
      - app-network


  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge


